name: Build and deploy to GitHub Pages

on: [push, pull_request]

env:
  releaseVersion: ${{ github.ref_name }}

jobs:
  build-javadoc:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Build Javadoc with Gradle Wrapper
        run: ./gradlew allJavadoc

      - name: Upload build artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          # Artifact name
          name: javadoc
          # A file, directory or wildcard pattern that describes what to upload
          path: ./build/docs/

  build-library:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Publish with Gradle Wrapper
        run: ./gradlew publish

      - name: Upload Maven repository
        uses: actions/upload-artifact@v4.3.1
        with:
          # Artifact name
          name: maven
          # A file, directory or wildcard pattern that describes what to upload
          path: ./repos/
          # The desired behavior if no files are found using the provided path.
          if-no-files-found: error

      - name: Upload ButtonBoxLib Vendordep
        uses: actions/upload-artifact@v4.3.1
        with:
          # Artifact name
          name: buttonbox-lib-vendordep
          # A file, directory or wildcard pattern that describes what to upload
          path: ./buttonbox-lib/build/outputs/ButtonBoxLib.json
          # The desired behavior if no files are found using the provided path.
          if-no-files-found: error

      - name: Upload ButtonBoxLibMIDI Vendordep
        uses: actions/upload-artifact@v4.3.1
        with:
          # Artifact name
          name: buttonbox-lib-midi-vendordep
          # A file, directory or wildcard pattern that describes what to upload
          path: ./buttonbox-lib-midi/build/outputs/ButtonBoxLibMIDI.json
          # The desired behavior if no files are found using the provided path.
          if-no-files-found: error

  build-docs:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: docs

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
          working-directory: '${{ github.workspace }}/docs'

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Upload build artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          # Artifact name
          name: docs
          # A file, directory or wildcard pattern that describes what to upload
          path: docs/_site/
          # The desired behavior if no files are found using the provided path.
          if-no-files-found: error

  combine:
    needs: [build-javadoc, build-library, build-docs]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: release
          merge-multiple: true

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          # Path of the directory containing the static assets.
          path: release

  deploy:
    # Add a dependency to the build job
    needs: combine

    # Only deploy on tag
    if: startsWith(github.ref, 'refs/tags/')

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action
