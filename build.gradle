plugins {
	id "com.diffplug.spotless" version "7.0.2" apply false
}

apply plugin: 'java'
apply plugin: 'com.diffplug.spotless'

// Needed so the Javadoc plugin works (for some reason, just putting Java in the plugins block doesn't work)
subprojects {
	apply plugin: 'java'
	apply plugin: 'com.diffplug.spotless'

	repositories {
		// Required by Spotless
		mavenCentral()
	}

	spotless {
		java {
			removeUnusedImports()

			// Format with Eclipse
			eclipse().configFile(rootProject.file('eclipse-formatter.xml'))

			// Fix formatting of type annotations
			formatAnnotations()
		}
	}
}

spotless {
	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '.gitattributes', '.gitignore'

		// define the steps to apply to those files
		trimTrailingWhitespace()
		leadingSpacesToTabs() // or leadingTabsToSpaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}
}

// Projects to include in the Javadoc build
def exportedProjects = [
	":buttonbox-lib",
	":buttonbox-lib-midi",
]
Set<Project> javaSubprojects = exportedProjects.collect { project(it) }.findAll { subproject -> subproject.plugins.hasPlugin(JavaPlugin) }

task allJavadoc(type: Javadoc) {
	description = 'Aggregates Javadoc API documentation of library subprojects.'
	group = JavaBasePlugin.DOCUMENTATION_GROUP
	dependsOn javaSubprojects.javadoc

	source javaSubprojects.javadoc.source
	classpath = files(javaSubprojects.javadoc.classpath)
	destinationDir = file("${buildDir}/docs/javadoc")
}

apply from: './javadoc.gradle'
